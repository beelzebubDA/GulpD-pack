header {
    background: rgba(24, 24, 32, 0.75);
    -webkit-backdrop-filter: blur(50px);
    backdrop-filter: blur(50px);
    padding: 15px 0;
    overflow: hidden;
}

header .header__block {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}

header .header__block .header__l__side {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: 0 100px;
}

header .header__block .header__l__side .header__logo {
    z-index: 15;
}

header .header__block .header__l__side .header__nav-menu .header__lists {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    list-style: none;
    gap: 0 60px;
}

header .header__block .header__l__side .header__nav-menu .header__lists .header__list .header__list__link {
    text-decoration: none;
    font-weight: 400;
    font-size: 18px;
    line-height: 22px;
    color: #F2F2FA;
}

header .header__block .header__r__side .header__r__links {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: 0 20px;
}

header .header__block .header__r__side .header__r__links a {
    text-decoration: none;
    font-style: normal;
    font-weight: 600;
    font-size: 18px;
    line-height: 140%;
}

header .header__block .header__r__side .header__r__links .header__sign__in {
    background: linear-gradient(0deg, rgba(242, 242, 250, 0.5), rgba(242, 242, 250, 0.5)), linear-gradient(94.95deg, #A4FFB8 2.9%, #46A6FF 101.18%);
    border-radius: 5px;
    padding: 13px 50px;
    position: relative;
    display: inline-block;
}

header .header__block .header__r__side .header__r__links .header__sign__in span {
    background: linear-gradient(0deg, rgba(242, 242, 250, 0.5), rgba(242, 242, 250, 0.5)), linear-gradient(94.95deg, #A4FFB8 2.9%, #46A6FF 101.18%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    display: block;
    position: relative;
    z-index: 2;
}

header .header__block .header__r__side .header__r__links .header__sign__in::before {
    background: rgb(24, 24, 32);
    content: "";
    position: absolute;
    display: block;
    width: calc(100% - 4px);
    height: calc(100% - 4px);
    -webkit-backdrop-filter: blur(50px);
    backdrop-filter: blur(50px);
    border-radius: 5px;
    top: 2px;
    left: 2px;
}

header .header__block .header__r__side .header__r__links .header__sign__up {
    color: #0C0C14;
    padding: 13px 40px;
    background: linear-gradient(94.95deg, #A4FFB8 2.9%, #46A6FF 101.18%);
    border-radius: 5px;
}

header .header__block .header__r__side .header__hamburger {
    display: none;
}

header .header__block .header__r__side .header__hamburger .header_hamburger-menu {
    background: transparent;
    border: none;
    cursor: pointer;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 0;
}

header .header__block .header__r__side .header__hamburger .line {
    fill: none;
    stroke: #46A6FF;
    stroke-width: 6;
    -webkit-transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1), stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1), stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

header .header__block .header__r__side .header__hamburger .line1 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
}

header .header__block .header__r__side .header__hamburger .line2 {
    stroke-dasharray: 60 60;
    stroke-width: 6;
}

header .header__block .header__r__side .header__hamburger .line3 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
}

header .header__block .header__r__side .header__hamburger .opened .line1 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
}

header .header__block .header__r__side .header__hamburger .opened .line2 {
    stroke-dasharray: 1 60;
    stroke-dashoffset: -30;
    stroke-width: 6;
}

header .header__block .header__r__side .header__hamburger .opened .line3 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
}

*,
ul,
li,
p,
a,
span {
    margin: 0;
    padding: 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

body {
    background: #0C0C14;
}

@supports (-webkit-appearance:none) {
}

@media (min-width: 1200px) {
    .container {
        width: 1160px;
        margin: 0 auto;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (min-width: 1340px) {
    .container {
        width: 1300px;
        padding: 0 20px;
        margin: 0 auto;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (min-width: 1600px) {
    .container {
        width: 1520px;
        margin: 0 auto;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (max-width: 1200px) {
    .container {
        width: 1024px;
        padding: 0 20px;
        margin: 0 auto;
    }

    header .header__block .header__l__side {
        gap: 0 80px;
    }

    header .header__block .header__l__side .header__nav-menu .header__lists {
        gap: 0 20px;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (max-width: 1024px) {
    .container {
        max-width: 990px;
        padding: 0 15px;
        width: 100%;
    }

    header .header__block {
        gap: 0 60px;
    }

    header .header__block .header__l__side {
        gap: 0 20px;
    }

    header .header__block .header__l__side .header__nav-menu .header__lists {
        position: fixed;
        right: -100%;
        top: 0;
        background: rgb(24, 24, 32);
        -webkit-backdrop-filter: blur(50px);
        backdrop-filter: blur(50px);
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
        flex-direction: row;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        text-align: center;
        -webkit-transition: 0.3s all ease;
        transition: 0.3s all ease;
    }

    header .header__block .header__l__side .header__nav-menu .header__lists.active {
        right: 0;
        z-index: 5;
    }

    header .header__block .header__r__side {
        padding-right: 55px;
    }

    header .header__block .header__r__side .header__hamburger {
        display: block;
        position: fixed;
        top: 15px;
        right: 15px;
        cursor: pointer;
        z-index: 10;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (max-width: 840px) {
    .container {
        max-width: 750px;
    }

    header .header__block {
        gap: 0 20px;
    }

@    supports (-webkit-appearance:none) {
    }
}

@media (max-width: 720px) {
    .container {
        max-width: 505px;
        min-width: 320px;
        padding: 0 10px;
    }

    header {
        padding: 25px 0 15px 0;
    }

    header .header__block {
        gap: 20px 0;
    }

    header .header__block {
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    }

    header .header__block .header__l__side .header__nav-menu .header__lists {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    header .header__block .header__r__side {
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        padding-right: 0;
        text-align: center;
    }

    header .header__block .header__r__side .header__r__links {
        gap: 10px;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    }

@    supports (-webkit-appearance:none) {
    }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */